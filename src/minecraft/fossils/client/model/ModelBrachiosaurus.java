
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX





package fossils.client.model;

import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import fossils.entity.EntityDinosaurce;

public class ModelBrachiosaurus extends ModelDinosaurs
{
      //fields
    ModelRenderer Snout;
    ModelRenderer Head;
    ModelRenderer Crest;
    ModelRenderer Neck;
    ModelRenderer Neck1;
    ModelRenderer Neck12;
    ModelRenderer Neck121;
    ModelRenderer Neck1211;
    ModelRenderer Neck1212;
    ModelRenderer Neck12121;
    ModelRenderer Neck121211;
    ModelRenderer Lower_Neck;
    ModelRenderer Lower_Neck1;
    ModelRenderer Body;
    ModelRenderer Lower_Body;
    ModelRenderer Front_Thigh;
    ModelRenderer Front_Thigh1;
    ModelRenderer Back_CalfRight;
    ModelRenderer Front_Calf1;
    ModelRenderer Back_Thigh;
    ModelRenderer Back_Thigh1;
    ModelRenderer Front_Calf2;
    ModelRenderer Back_CalfLeft;
    ModelRenderer Tail;
    ModelRenderer Tail1;
    ModelRenderer Tail11;
      
      public ModelBrachiosaurus()
      {
        Snout = new ModelRenderer(this, 50, 8).setTextureSize(64, 32);;
        Snout.addBox(-1.5F, -1F, -6.5F, 3, 2, 4);
        Snout.setRotationPoint(0F, -6F, -11F);
        setRotation(Snout, 0.2617994F, 0F, 0F);
        Snout.mirror = true;
        Head = new ModelRenderer(this, 48, 14).setTextureSize(64, 32);;
        Head.addBox(-2F, -1F, -4F, 4, 3, 4);
        Head.setRotationPoint(0F, -6F, -10.5F);
        setRotation(Head, 0F, 0F, 0F);
        Head.mirror = true;
        Crest = new ModelRenderer(this, 52, 0).setTextureSize(64, 32);;
        Crest.addBox(-1F, -3F, -5F, 2, 4, 4);
        Crest.setRotationPoint(0F, -6F, -11F);
        setRotation(Crest, 0F, 0F, 0F);
        Crest.mirror = true;
        Neck = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck.addBox(-1.5F, 0F, 0F, 3, 2, 2);
        Neck.setRotationPoint(0F, -6F, -10.5F);
        setRotation(Neck, -0.7853982F, 0F, 0F);
        Neck.mirror = true;
        Neck1 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck1.addBox(-1.5F, 0F, 0F, 3, 2, 2);
        Neck1.setRotationPoint(0F, -4.5F, -9F);
        setRotation(Neck1, -0.9599311F, 0F, 0F);
        Neck1.mirror = true;
        Neck12 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck12.addBox(-1.5F, 0F, 0F, 3, 2, 2);
        Neck12.setRotationPoint(0F, -3F, -8F);
        setRotation(Neck12, -1.23464F, 0F, 0F);
        Neck12.mirror = true;
        Neck121 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck121.addBox(-1.5F, 0F, 2F, 3, 2, 2);
        Neck121.setRotationPoint(0F, -1.5F, -7.5F);
        setRotation(Neck121, -1.343904F, 0F, 0F);
        Neck121.mirror = true;
        Neck1211 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck1211.addBox(-1.5F, 0F, 0F, 3, 2, 2);
        Neck1211.setRotationPoint(0F, -1.5F, -7.5F);
        setRotation(Neck1211, -1.343904F, 0F, 0F);
        Neck1211.mirror = true;
        Neck1212 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck1212.addBox(-1.5F, 0F, 4F, 3, 2, 2);
        Neck1212.setRotationPoint(0F, -1.5F, -7.5F);
        setRotation(Neck1212, -1.343904F, 0F, 0F);
        Neck1212.mirror = true;
        Neck12121 = new ModelRenderer(this, 22, 0).setTextureSize(64, 32);;
        Neck12121.addBox(-1.5F, 0F, 6F, 3, 2, 2);
        Neck12121.setRotationPoint(0F, -1.5F, -7.5F);
        setRotation(Neck12121, -1.343904F, 0F, 0F);
        Neck12121.mirror = true;
        Neck121211 = new ModelRenderer(this, 34, 11).setTextureSize(64, 32);;
        Neck121211.addBox(-2F, -1F, -0.5F, 4, 3, 3);
        Neck121211.setRotationPoint(0F, 6F, -6.5F);
        setRotation(Neck121211, -0.9637522F, 0F, 0F);
        Neck121211.mirror = true;
        Lower_Neck = new ModelRenderer(this, 32, 24).setTextureSize(64, 32);;
        Lower_Neck.addBox(-2.5F, -0.5F, -0.5F, 5, 4, 4);
        Lower_Neck.setRotationPoint(0F, 7F, -5F);
        setRotation(Lower_Neck, -0.8377581F, 0F, 0F);
        Lower_Neck.mirror = true;
        Lower_Neck1 = new ModelRenderer(this, 10, 21).setTextureSize(64, 32);;
        Lower_Neck1.addBox(-3F, 0F, 0F, 6, 6, 5);
        Lower_Neck1.setRotationPoint(0F, 7F, -5F);
        setRotation(Lower_Neck1, -0.3907885F, 0F, 0F);
        Lower_Neck1.mirror = true;
        Body = new ModelRenderer(this, 0, 0).setTextureSize(64, 32);;
        Body.addBox(-4F, 0F, 0F, 8, 7, 6);
        Body.setRotationPoint(0F, 8F, -3F);
        setRotation(Body, -0.1115358F, 0F, 0F);
        Body.mirror = true;
        Lower_Body = new ModelRenderer(this, 28, 0).setTextureSize(64, 32);;
        Lower_Body.addBox(-3.5F, 0F, 0F, 7, 6, 5);
        Lower_Body.setRotationPoint(0F, 9F, 2F);
        setRotation(Lower_Body, -0.3346075F, 0F, 0F);
        Lower_Body.mirror = true;
        Front_Thigh = new ModelRenderer(this, 50, 21).setTextureSize(64, 32);;
        Front_Thigh.addBox(0F, 0F, -2F, 3, 7, 4);
        Front_Thigh.setRotationPoint(3F, 12F, -3.5F);
        setRotation(Front_Thigh, 0F, 0F, 0F);
        Front_Thigh.mirror = true;
        Front_Thigh1 = new ModelRenderer(this, 50, 21).setTextureSize(64, 32);;
        Front_Thigh1.addBox(-3F, 0F, -2F, 3, 7, 4);
        Front_Thigh1.setRotationPoint(-3F, 12F, -3.5F);
        setRotation(Front_Thigh1, 0F, 0F, 0F);
        Front_Thigh1.mirror = true;
        Back_CalfRight = new ModelRenderer(this, 0, 24).setTextureSize(64, 32);;
        Back_CalfRight.addBox(-0.5F, 5F, -1F, 2, 5, 3);
        Back_CalfRight.setRotationPoint(3F, 14F, 4.5F);
        setRotation(Back_CalfRight, 0F, 0F, 0F);
        Back_CalfRight.mirror = true;
        Front_Calf1 = new ModelRenderer(this, 0, 24).setTextureSize(64, 32);;
        Front_Calf1.addBox(0.5F, 7F, -2F, 2, 5, 3);
        Front_Calf1.setRotationPoint(3F, 12F, -3.5F);
        setRotation(Front_Calf1, 0F, 0F, 0F);
        Front_Calf1.mirror = true;
        Back_Thigh = new ModelRenderer(this, 50, 21).setTextureSize(64, 32);;
        Back_Thigh.addBox(-2F, 0F, -2F, 3, 5, 4);
        Back_Thigh.setRotationPoint(-3F, 14F, 4.5F);
        setRotation(Back_Thigh, 0F, 0F, 0F);
        Back_Thigh.mirror = true;
        Back_Thigh1 = new ModelRenderer(this, 50, 21).setTextureSize(64, 32);;
        Back_Thigh1.addBox(-1F, 0F, -2F, 3, 5, 4);
        Back_Thigh1.setRotationPoint(3F, 14F, 4.5F);
        setRotation(Back_Thigh1, 0F, 0F, 0F);
        Back_Thigh1.mirror = true;
        Front_Calf2 = new ModelRenderer(this, 0, 24).setTextureSize(64, 32);;
        Front_Calf2.addBox(-2.5F, 7F, -2F, 2, 5, 3);
        Front_Calf2.setRotationPoint(-3F, 12F, -3.5F);
        setRotation(Front_Calf2, 0F, 0F, 0F);
        Front_Calf2.mirror = true;
        Back_CalfLeft = new ModelRenderer(this, 0, 24).setTextureSize(64, 32);;
        Back_CalfLeft.addBox(-1.5F, 5F, -1F, 2, 5, 3);
        Back_CalfLeft.setRotationPoint(-3F, 14F, 4.5F);
        setRotation(Back_CalfLeft, 0F, 0F, 0F);
        Back_CalfLeft.mirror = true;
        Tail = new ModelRenderer(this, 0, 13).setTextureSize(64, 32);;
        Tail.addBox(-2.5F, 0F, 0F, 5, 4, 4);
        Tail.setRotationPoint(0F, 11F, 6F);
        setRotation(Tail, -0.7064018F, 0F, 0F);
        Tail.mirror = true;
        Tail1 = new ModelRenderer(this, 18, 13).setTextureSize(64, 32);;
        Tail1.addBox(-2F, 0F, 0F, 4, 3, 4);
        Tail1.setRotationPoint(0F, 14F, 8F);
        setRotation(Tail1, -0.5576873F, 0F, 0F);
        Tail1.mirror = true;
        Tail11 = new ModelRenderer(this, 34, 17).setTextureSize(64, 32);;
        Tail11.addBox(-1.5F, 0F, 0F, 3, 2, 4);
        Tail11.setRotationPoint(0F, 16.5F, 10.5F);
        setRotation(Tail11, -0.3717943F, 0F, 0F);
        Tail11.mirror = true;
      }

      public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
      {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5,((EntityDinosaurce)entity).isModelized());
        Snout.render(f5);
        Head.render(f5);
        Crest.render(f5);
        Neck.render(f5);
        Neck1.render(f5);
        Neck12.render(f5);
        Neck121.render(f5);
        Neck1211.render(f5);
        Neck1212.render(f5);
        Neck12121.render(f5);
        Neck121211.render(f5);
        Lower_Neck.render(f5);
        Lower_Neck1.render(f5);
        Body.render(f5);
        Lower_Body.render(f5);
        Front_Thigh.render(f5);
        Front_Thigh1.render(f5);
        Back_CalfRight.render(f5);
        Front_Calf1.render(f5);
        Back_Thigh.render(f5);
        Back_Thigh1.render(f5);
        Front_Calf2.render(f5);
        Back_CalfLeft.render(f5);
        Tail.render(f5);
        Tail1.render(f5);
        Tail11.render(f5);
      }


      
      private void setRotation(ModelRenderer model, float x, float y, float z)
      {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
      }

	@Override
	protected void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5, boolean modelized) {
		if (modelized) return;
        Front_Thigh.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        Front_Calf1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        Front_Thigh1.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
        Front_Calf2.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
        Back_Thigh1.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
        Back_CalfRight.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
        Back_Thigh.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        Back_CalfLeft.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
		
	}
}
